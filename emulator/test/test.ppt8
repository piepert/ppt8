# 12            - immediate 12
# @12           - memory address at memory location 12
# label:        - label definition; label "label" is allocated to the current index at programm
# label         - get index of programm allocated to label
# alloc m, 0, byte 12       - allocates the memory address of 0 and the end of the data to m, m always points to 0
# m             - get memory address allocated to m
# #m            - get end of memory location
#                   -> alloc n, #m, byte 12     - allocates m to the memory address of #m (so next slot after m's data ends) and sets the data to 12

alloc hw, 0, "Hallo Welt!"  # compiles to -> alloc 0 11 72 97 108 108 111 32 87 101 108 116 33
                            #                alloc <memory address> <length of data> <data>; t contains the memory location 0
                            #                length of data automatically generated by compiler

alloc #hw, 12               # save 12 as a byte at memory location 11 (after hw)

start:
    mov     dx, hw      # move address hw
    int     0x01        # 0x01 -> print a zero-terminated string to the screen, needs 16bit-address location to data in dx

mov_test:
    mov     ax, bx
    mov     ax, 1
    mov     ax, @1
    mov     ax, @ax

    mov     @1, 1
    mov     @1, ax
    mov     @1, @1
    mov     @1, @ax

    mov     @ax, 1
    mov     @ax, ax
    mov     @ax, @1
    mov     @ax, @ax